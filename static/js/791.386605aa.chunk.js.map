{"version":3,"file":"static/js/791.386605aa.chunk.js","mappings":"4TAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,wCAA2CF,IAD7D,cACCG,EADD,yBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBH,IAAAA,IAAA,mBAAsBG,EAAtB,oBAAoCL,IADtD,uBACGM,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,yFACkBH,IAAAA,IAAA,mBAAsBG,EAAtB,4BAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,yFACkBH,IAAAA,IAAA,mBAAsBG,EAAtB,4BAA4CL,IAD9D,uBACGM,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBR,IAAAA,IAAA,kCACMF,EADN,kBACuBU,EADvB,yBADlB,uBACGJ,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAtBPJ,IAAAA,SAAAA,QAAyB,4B,6ECDZS,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,MACNC,UAAU,sBAGf,C,sECVYC,E,QAAYC,GAAAA,IAAH,8C,0KCATC,E,QAASD,GAAAA,EAAH,oE,SCCJ,SAASE,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpC,OACE,wBACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,2BACE,SAACJ,EAAD,4BAAoBI,EAAOC,WAC3B,SAACL,EAAD,UAASI,EAAOE,YAFTF,EAAOlB,GADC,KAQxB,CCPc,SAASqB,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMP,GAAN,gFACnBK,GAAa,GADM,mBAGMxB,EAAAA,EAAAA,IAAgBmB,GAHtB,gBAGTrB,EAHS,EAGTA,KAERwB,EAAWxB,EAAK6B,SALC,yEAQjBH,GAAa,GARI,4EAAH,sDAYlBE,EAAaP,EACd,GAAE,CAACA,KAGF,2BACGI,IACC,SAAC,IAAD,WACE,SAACpB,EAAA,EAAD,MAGgB,IAAnBU,EAAQe,QACP,SAAChB,EAAD,CAAaC,QAASA,KAEtB,mEAIP,C","sources":["api/api.jsx","components/Loader/Loader.jsx","components/Loader/Loader.styled.jsx","components/ReviewsItem/Reviews.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '06cf6ee022a0922eb5200ae030143d7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieCredits(id) {\n  const { data } = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMovieReviews(id) {\n  const { data } = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMoviesByQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false`\n  );\n  return { data };\n}\n","import { Circles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"red\"\n      ariaLabel=\"three-dots-loading\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const DivLoader = styled.div`\n  margin-left: 400px;\n`;\n","import styled from 'styled-components';\n\nexport const Review = styled.p`\n  margin-top: 5px;\n  margin-bottom: 10px;\n`;\n","import propTypes from 'prop-types';\nimport { Review } from './Reviews.styled';\n\nexport default function ReviewsItem({ reviews }) {\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <Review>{`Author: ${review.author}`}</Review>\n          <Review>{review.content}</Review>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nReviewsItem.propTypes = {\n  reviews: propTypes.arrayOf(propTypes.object).isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { DivLoader } from 'components/Loader/Loader.styled';\nimport ReviewsItem from 'components/ReviewsItem/ReviewsItem';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async movieId => {\n      setIsLoading(true);\n      try {\n        const { data } = await getMovieReviews(movieId);\n\n        setReviews(data.results);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && (\n        <DivLoader>\n          <Loader />\n        </DivLoader>\n      )}\n      {reviews.length !== 0 ? (\n        <ReviewsItem reviews={reviews} />\n      ) : (\n        <p>We do not have reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","getTrendingMovies","axios","response","getMovieById","id","data","getMovieCredits","getMovieReviews","getMoviesByQuery","searchQuery","Loader","height","width","radius","color","ariaLabel","DivLoader","styled","Review","ReviewsItem","reviews","map","review","author","content","Reviews","movieId","useParams","useState","setReviews","isLoading","setIsLoading","useEffect","fetchReviews","results","length"],"sourceRoot":""}